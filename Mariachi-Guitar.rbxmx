<roblox xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.roblox.com/roblox.xsd" version="4">
	<Meta name="ExplicitAutoJoints">false</Meta>
	<External>null</External>
	<External>nil</External>
	<Item class="Tool" referent="RBX1008A14731DB4F59B4006EACBF0EF46F">
		<Properties>
			<bool name="CanBeDropped">true</bool>
			<bool name="Enabled">true</bool>
			<CoordinateFrame name="Grip">
				<X>0</X>
				<Y>0</Y>
				<Z>1.39999998</Z>
				<R00>0.227921158</R00>
				<R01>-0.94561094</R01>
				<R02>-0.232103527</R02>
				<R10>-0.341881752</R10>
				<R11>0.145478591</R11>
				<R12>-0.928414106</R12>
				<R20>0.911684632</R20>
				<R21>0.290957212</R21>
				<R22>-0.290129423</R22>
			</CoordinateFrame>
			<bool name="ManualActivationOnly">false</bool>
			<string name="Name">MariachiGuitar</string>
			<bool name="RequiresHandle">true</bool>
			<BinaryString name="Tags"></BinaryString>
			<Content name="TextureId"><url>http://www.roblox.com/asset/?id=26639670</url></Content>
			<string name="ToolTip"></string>
		</Properties>
		<Item class="Part" referent="RBX240ADB7375BF4A20BAA5E6533701BCAF">
			<Properties>
				<bool name="Anchored">false</bool>
				<float name="BackParamA">-0.5</float>
				<float name="BackParamB">0.5</float>
				<token name="BackSurface">0</token>
				<token name="BackSurfaceInput">0</token>
				<float name="BottomParamA">-0.5</float>
				<float name="BottomParamB">0.5</float>
				<token name="BottomSurface">0</token>
				<token name="BottomSurfaceInput">0</token>
				<CoordinateFrame name="CFrame">
					<X>-4.92000008</X>
					<Y>13.79</Y>
					<Z>17.5499992</Z>
					<R00>-0.396673143</R00>
					<R01>-0.570907533</R01>
					<R02>0.718828917</R02>
					<R10>0.410194159</R10>
					<R11>0.590301454</R11>
					<R12>0.695187032</R12>
					<R20>-0.821213305</R20>
					<R21>0.570621431</R21>
					<R22>2.61997375e-05</R22>
				</CoordinateFrame>
				<bool name="CanCollide">true</bool>
				<int name="CollisionGroupId">0</int>
				<Color3uint8 name="Color3uint8">4288914085</Color3uint8>
				<PhysicalProperties name="CustomPhysicalProperties">
					<CustomPhysics>false</CustomPhysics>
				</PhysicalProperties>
				<float name="FrontParamA">-0.5</float>
				<float name="FrontParamB">0.5</float>
				<token name="FrontSurface">0</token>
				<token name="FrontSurfaceInput">0</token>
				<float name="LeftParamA">-0.5</float>
				<float name="LeftParamB">0.5</float>
				<token name="LeftSurface">0</token>
				<token name="LeftSurfaceInput">0</token>
				<bool name="Locked">true</bool>
				<token name="Material">256</token>
				<string name="Name">Handle</string>
				<float name="Reflectance">0</float>
				<float name="RightParamA">-0.5</float>
				<float name="RightParamB">0.5</float>
				<token name="RightSurface">0</token>
				<token name="RightSurfaceInput">0</token>
				<Vector3 name="RotVelocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<BinaryString name="Tags"></BinaryString>
				<float name="TopParamA">-0.5</float>
				<float name="TopParamB">0.5</float>
				<token name="TopSurface">0</token>
				<token name="TopSurfaceInput">0</token>
				<float name="Transparency">0</float>
				<Vector3 name="Velocity">
					<X>0</X>
					<Y>0</Y>
					<Z>0</Z>
				</Vector3>
				<token name="formFactorRaw">3</token>
				<token name="shape">1</token>
				<Vector3 name="size">
					<X>1.5</X>
					<Y>0.5</Y>
					<Z>3.375</Z>
				</Vector3>
			</Properties>
			<Item class="SpecialMesh" referent="RBX6091A698B6C1470A913BBFDBF5F48838">
				<Properties>
					<token name="LODX">2</token>
					<token name="LODY">2</token>
					<Content name="MeshId"><url>http://www.roblox.com/asset/?id=26639749</url></Content>
					<token name="MeshType">5</token>
					<string name="Name">Mesh</string>
					<Vector3 name="Offset">
						<X>0</X>
						<Y>0</Y>
						<Z>0</Z>
					</Vector3>
					<Vector3 name="Scale">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
					<BinaryString name="Tags"></BinaryString>
					<Content name="TextureId"><url>http://www.roblox.com/asset/?id=26639722</url></Content>
					<Vector3 name="VertexColor">
						<X>1</X>
						<Y>1</Y>
						<Z>1</Z>
					</Vector3>
				</Properties>
			</Item>
		</Item>
		<Item class="Script" referent="RBX89C6FF11D3FD4F8DB01C80F0E9A4D978">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">Script</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")

RbxUtility = LoadLibrary("RbxUtility")
Create = RbxUtility.Create

Folders = Tool:WaitForChild("Folders")
RemoteFolder = Folders:WaitForChild("Remotes")

NoteData = {
	Chords = {
		{Key = "F", Sound = 26639037, Message = "Uno"},
		{Key = "G", Sound = 26639062, Message = "Dos"},
		{Key = "H", Sound = 26639086, Message = "Tres"},
		{Key = "J", Sound = 26639102, Message = "Cuatro"},
		{Key = "K", Sound = 26639113, Message = "Cinco"},
		{Key = "L", Sound = 26639122, Message = "Sies"},
		{Key = "Semicolon", Sound = 26639149, Message = "Siete"},
	},
	Pitches = {
	},
}

Sound = {
	Volume = 1,
	Pitch = 1,
}

CurrentSound = NoteData.Chords[1]

IsPlaying = true
ShiftDown = false
ToolEquipped = false

ServerControl = (RemoteFolder:FindFirstChild("ServerControl") or Create("RemoteFunction"){
	Name = "ServerControl",
	Parent = RemoteFolder,
})

ClientControl = (RemoteFolder:FindFirstChild("ClientControl") or Create("RemoteFunction"){
	Name = "ClientControl",
	Parent = RemoteFolder,
})

GuitarModule = require(191816425)
GuitarTable = GuitarModule.GetTable({Key = "Guitars"})
GuitarFunctions = GuitarTable.GetData({
	Tool = Tool,
	Communication = {Server = ServerControl, Client = ClientControl},
	KeyData = NoteData,
	SpecialEnabled = {Enabled = false, AcceptedRatio = 0.75},
})

Handle.Transparency = 0
Tool.Enabled = true

function Activated()
	Tool.Enabled = false
	GuitarFunctions.PlaySound({
		Object = Handle,
		Sound = {SoundId = CurrentSound, ShiftDown = ShiftDown},
		Pitch = (Sound.Pitch or CurrentSound.Pitch or nil),
		Volume = (Sound.Volume or CurrentSound.Volume or nil),
	})
	GuitarFunctions.PlayNote()
	Tool.Enabled = true
end

function CheckIfAlive()
	return (((Player and Player.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	if not CheckIfAlive() then
		return
	end
	IsPlaying = true
	ShiftDown = false
	ToolEquipped = true
end

function Unequipped()
	IsPlaying = true
	ShiftDown = false
	ToolEquipped = false
end

function InvokeClient(Mode, Value)
	local ClientReturn = nil
	pcall(function()
		ClientReturn = ClientControl:InvokeClient(Player, Mode, Value)
	end)
	return ClientReturn
end

function OnServerInvoke(player, Mode, Value)
	if player ~= Player then
		return
	end
	if Mode == "KeyPressed" and Value then
		local Key = Value.Key
		local Down = Value.Down
		if Key == "LeftShift" or Key == "RightShift" then
			ShiftDown = Down
		elseif IsPlaying and Down then
			if NoteData.Chords then
				for i, v in pairs(NoteData.Chords) do
					if string.lower(v.Key) == string.lower(Key) then
						CurrentSound = v
						GuitarFunctions.DisplayTune(CurrentSound.Message)
						return
					end
				end
			end
			if NoteData.Pitches then
				for i, v in pairs(NoteData.Pitches) do
					if string.lower(v.Key) == string.lower(Key) then
						Sound.Pitch = v.Pitch
						return
					end
				end
			end
		end
	elseif Mode == "IsPlaying" then
		return IsPlaying
	elseif Mode == "SpecialCompleted" and Value then
		local Success = Value.Success
		local SuccessRatio = Value.SuccessRatio
		if Success then
		end
	end
end

ServerControl.OnServerInvoke = OnServerInvoke

Tool.Activated:connect(Activated)
Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="LocalScript" referent="RBX6C53815E433D455BB316D22DB32F9ADD">
			<Properties>
				<bool name="Disabled">false</bool>
				<Content name="LinkedSource"><null></null></Content>
				<string name="Name">LocalScript</string>
				<string name="ScriptGuid"></string>
				<ProtectedString name="Source"><![CDATA[--Made by Luckymaxer

Tool = script.Parent
Handle = Tool:WaitForChild("Handle")

Players = game:GetService("Players")
Debris = game:GetService("Debris")
UserInputService = game:GetService("UserInputService")

Folders = Tool:WaitForChild("Folders")
RemotesFolder = Folders:WaitForChild("Remotes")
ServerControl = RemotesFolder:WaitForChild("ServerControl")
ClientControl = RemotesFolder:WaitForChild("ClientControl")

Animations = {}

ToolEquipped = false

function SetAnimation(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
		local AnimationTrack = Humanoid:LoadAnimation(value.Animation)
		table.insert(Animations, {Animation = value.Animation, AnimationTrack = AnimationTrack})
		AnimationTrack:Play(value.FadeTime, value.Weight, value.Speed)
	elseif mode == "StopAnimation" and value then
		for i, v in pairs(Animations) do
			if v.Animation == value.Animation then
				v.AnimationTrack:Stop()
				table.remove(Animations, i)
			end
		end
	end
end

function CheckIfAlive()
	return (((Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Player and Player.Parent) and true) or false)
end

function Equipped(Mouse)
	Character = Tool.Parent
	Player = Players:GetPlayerFromCharacter(Character)
	Humanoid = Character:FindFirstChild("Humanoid")
	ToolEquipped = true
	if not CheckIfAlive() then
		return
	end
	PlayerMouse = Mouse
	Mouse.Button1Down:connect(function()
		InvokeServer("MouseClick", {Down = true})
	end)
	Mouse.Button1Up:connect(function()
		InvokeServer("MouseClick", {Down = false})
	end)
	for i, v in pairs({KeyDown, KeyUp}) do
		if v then
			v:disconnect()
		end
	end
	KeyDown = UserInputService.InputBegan:connect(function(InputObject)
		local InputType = InputObject.UserInputType
		local KeyCode = InputObject.KeyCode
		if InputType == Enum.UserInputType.Keyboard then
			InvokeServer("KeyPressed", {Key = KeyCode.Name, Down = true})
		end
	end)
	KeyUp = UserInputService.InputEnded:connect(function(InputObject)
		local InputType = InputObject.UserInputType
		local KeyCode = InputObject.KeyCode
		if InputType == Enum.UserInputType.Keyboard then
			InvokeServer("KeyPressed", {Key = KeyCode.Name, Down = false})
		end
	end)
end

function Unequipped()
	for i, v in pairs({KeyDown, KeyUp}) do
		if v then
			v:disconnect()
		end
	end
	for i, v in pairs(Animations) do
		if v and v.AnimationTrack then
			v.AnimationTrack:Stop()
		end
	end
	Animations = {}
	ToolEquipped = false
end

function InvokeServer(mode, value)
	local ServerReturn
	pcall(function()
		ServerReturn = ServerControl:InvokeServer(mode, value)
	end)
	return ServerReturn
end

function OnClientInvoke(mode, value)
	if mode == "PlayAnimation" and value and ToolEquipped and Humanoid then
		SetAnimation("PlayAnimation", value)
	elseif mode == "StopAnimation" and value then
		SetAnimation("StopAnimation", value)
	elseif mode == "PlaySound" and value then
		value:Play()
	elseif mode == "StopSound" and value then
		value:Stop()
	elseif mode == "MousePosition" then
		return ((PlayerMouse and {Position = PlayerMouse.Hit.p, Target = PlayerMouse.Target}) or nil)
	end
end

ClientControl.OnClientInvoke = OnClientInvoke

Tool.Equipped:connect(Equipped)
Tool.Unequipped:connect(Unequipped)]]></ProtectedString>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
		<Item class="Folder" referent="RBX3C10FEFDFE4C49B0A4C25124FA54A2E0">
			<Properties>
				<string name="Name">Folders</string>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
			<Item class="Folder" referent="RBX05BA7215F96947F88D72F07C70E9E239">
				<Properties>
					<string name="Name">Remotes</string>
					<BinaryString name="Tags"></BinaryString>
				</Properties>
				<Item class="RemoteFunction" referent="RBXCAFF720C06A8442EBEDA70AA27689E67">
					<Properties>
						<string name="Name">ServerControl</string>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
				<Item class="RemoteFunction" referent="RBX528F808944424BFE92BCA8DE834B68D7">
					<Properties>
						<string name="Name">ClientControl</string>
						<BinaryString name="Tags"></BinaryString>
					</Properties>
				</Item>
			</Item>
		</Item>
		<Item class="Camera" referent="RBXEFBA2A94E77343C0A1676B4C2C98C5A1">
			<Properties>
				<CoordinateFrame name="CFrame">
					<X>-5.9296484</X>
					<Y>15.6794348</Y>
					<Z>20.4310436</Z>
					<R00>0.943727255</R00>
					<R01>0.174050808</R01>
					<R02>-0.281220883</R02>
					<R10>-1.49011612e-08</R10>
					<R11>0.850317061</R11>
					<R12>0.526270866</R12>
					<R20>0.330724746</R20>
					<R21>-0.49665615</R21>
					<R22>0.802467346</R22>
				</CoordinateFrame>
				<Ref name="CameraSubject">null</Ref>
				<token name="CameraType">0</token>
				<float name="FieldOfView">70</float>
				<CoordinateFrame name="Focus">
					<X>-4.92000008</X>
					<Y>13.79</Y>
					<Z>17.5499992</Z>
					<R00>1</R00>
					<R01>0</R01>
					<R02>0</R02>
					<R10>0</R10>
					<R11>1</R11>
					<R12>0</R12>
					<R20>0</R20>
					<R21>0</R21>
					<R22>1</R22>
				</CoordinateFrame>
				<bool name="HeadLocked">true</bool>
				<float name="HeadScale">1</float>
				<string name="Name">ThumbnailCamera</string>
				<BinaryString name="Tags"></BinaryString>
			</Properties>
		</Item>
	</Item>
</roblox>